{"ast":null,"code":"var _jsxFileName = \"/Users/pearlmalt/Desktop/portfolio/src/Review.js\";\nimport React, { useState } from 'react';\nimport people from './data';\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\n\nconst Project = () => {\n  const [index, setIndex] = useState(0);\n  const {\n    title,\n    type,\n    image,\n    info\n  } = project[index];\n\n  const checkNumber = number => {\n    if (number > project.length - 1) {\n      return 0;\n    }\n\n    if (number < 0) {\n      return project.length - 1;\n    }\n\n    return number;\n  };\n\n  const nextProject = () => {\n    setIndex(index => {\n      let newIndex = index + 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const prevProject = () => {\n    setIndex(index => {\n      let newIndex = index - 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const randomProject = () => {\n    let randomNumber = Math.floor(Math.random() * prevProject.length);\n\n    if (randomNumber === index) {\n      randomNumber = index + 1;\n    }\n\n    setIndex(checkNumber(randomNumber));\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: name,\n    className: \"person-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), \"// \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quote-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(FaQuoteRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"Website Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Languages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, type), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, info), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"prev-btn\",\n    onClick: prevProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaChevronLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"next-btn\",\n    onClick: nextProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaChevronRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"random-btn\",\n    onClick: randomPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"surprise me\"));\n};\n\nexport default Review;","map":{"version":3,"sources":["/Users/pearlmalt/Desktop/portfolio/src/Review.js"],"names":["React","useState","people","FaChevronLeft","FaChevronRight","FaQuoteRight","Project","index","setIndex","title","type","image","info","project","checkNumber","number","length","nextProject","newIndex","prevProject","randomProject","randomNumber","Math","floor","random","name","randomPerson","Review"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport people from './data';\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\nconst Project = () => {\n  const [index, setIndex] = useState(0);\n  const { title, type, image, info } = project[index];\n  const checkNumber = (number) => {\n    if (number > project.length - 1) {\n      return 0;\n    }\n    if (number < 0) {\n      return project.length - 1;\n    }\n    return number;\n  };\n  const nextProject = () => {\n    setIndex((index) => {\n      let newIndex = index + 1;\n      return checkNumber(newIndex);\n    });\n  };\n  const prevProject = () => {\n    setIndex((index) => {\n      let newIndex = index - 1;\n      return checkNumber(newIndex);\n    });\n  };\n  const randomProject = () => {\n    let randomNumber = Math.floor(Math.random() * prevProject.length);\n    if (randomNumber === index) {\n      randomNumber = index + 1;\n    }\n    setIndex(checkNumber(randomNumber));\n  };\n\n  return (\n    <article className='project'>\n      <div className='img-container'>\n        <img src={image} alt={name} className='person-img' />\n        // <span className='quote-icon'>\n          <FaQuoteRight />\n        </span>\n      </div>\n      <h4 className='Website Title'>{title}</h4>\n      <p className='Languages'>{type}</p>\n      <p className='Information'>{info}</p>\n      <div className='button-container'>\n        <button className='prev-btn' onClick={prevProject}>\n          <FaChevronLeft />\n        </button>\n        <button className='next-btn' onClick={nextProject}>\n          <FaChevronRight />\n        </button>\n      </div>\n      <button className='random-btn' onClick={randomPerson}>\n        surprise me\n      </button>\n    </article>\n  );\n};\n\nexport default Review;\n"]},"metadata":{},"sourceType":"module"}