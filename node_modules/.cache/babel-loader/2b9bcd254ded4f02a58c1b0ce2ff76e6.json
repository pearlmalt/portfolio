{"ast":null,"code":"var _jsxFileName = \"/Users/pearlmalt/Desktop/portfolio/src/Review.js\";\nimport React, { useState } from 'react';\nimport people from './data';\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\n\nconst Review = () => {\n  const [index, setIndex] = useState(0);\n  const {\n    name,\n    job,\n    image,\n    text,\n    linked\n  } = people[index];\n\n  const checkNumber = number => {\n    if (number > people.length - 1) {\n      return 0;\n    }\n\n    if (number < 0) {\n      return people.length - 1;\n    }\n\n    return number;\n  };\n\n  const nextPerson = () => {\n    setIndex(index => {\n      let newIndex = index + 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const prevPerson = () => {\n    setIndex(index => {\n      let newIndex = index - 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const randomPerson = () => {\n    let randomNumber = Math.floor(Math.random() * people.length);\n\n    if (randomNumber === index) {\n      randomNumber = index + 1;\n    }\n\n    setIndex(checkNumber(randomNumber));\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"review\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: e => window.location.href = linked,\n    src: image,\n    alt: name,\n    className: \"person-img\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"job\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, job), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"prev-btn\",\n    onClick: prevPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaChevronLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"next-btn\",\n    onClick: nextPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaChevronRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"random-btn\",\n    onClick: randomPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"surprise me\"));\n};\n\nexport default Review;","map":{"version":3,"sources":["/Users/pearlmalt/Desktop/portfolio/src/Review.js"],"names":["React","useState","people","FaChevronLeft","FaChevronRight","FaQuoteRight","Review","index","setIndex","name","job","image","text","linked","checkNumber","number","length","nextPerson","newIndex","prevPerson","randomPerson","randomNumber","Math","floor","random","e","window","location","href"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport people from './data';\n\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\nconst Review = () => {\n  const [index, setIndex] = useState(0);\n  const { name, job, image, text, linked } = people[index];\n  const checkNumber = (number) => {\n    if (number > people.length - 1) {\n      return 0;\n    }\n    if (number < 0) {\n      return people.length - 1;\n    }\n    return number;\n  };\n  const nextPerson = () => {\n    setIndex((index) => {\n      let newIndex = index + 1;\n      return checkNumber(newIndex);\n    });\n  };\n  const prevPerson = () => {\n    setIndex((index) => {\n      let newIndex = index - 1;\n      return checkNumber(newIndex);\n    });\n  };\n  const randomPerson = () => {\n    let randomNumber = Math.floor(Math.random() * people.length);\n    if (randomNumber === index) {\n      randomNumber = index + 1;\n    }\n    setIndex(checkNumber(randomNumber));\n  };\n\n  return (\n    <article className='review'>\n      <div className='img-container'>\n\n        <img\n      onClick={(e) => (window.location.href = linked)}\n\n        src={image} alt={name} className='person-img' target=\"_blank\"/>\n\n      </div>\n      <h4 className='author'>{name}</h4>\n      <p className='job'>{job}</p>\n      <p className='info'>{text}</p>\n      <div className='button-container'>\n        <button className='prev-btn' onClick={prevPerson}>\n          <FaChevronLeft />\n        </button>\n        <button className='next-btn' onClick={nextPerson}>\n          <FaChevronRight />\n        </button>\n      </div>\n      <button className='random-btn' onClick={randomPerson}>\n        surprise me\n      </button>\n    </article>\n  );\n};\n\nexport default Review;\n"]},"metadata":{},"sourceType":"module"}